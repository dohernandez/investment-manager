{#
    entities => Entity[] -> Entity list. Entity should implement getId() and __toString() functions
    new_url => url to create a new entity
    entity_name => entity name
    fields => {
                'render': {
                    base: <value>, default(text) -> How to render the field. Render type [text, currency, date, slice]
                    option: <value>

                        1. base 'text' option should not be defined.
                        2. base 'truncate' option value is the slice until the truncate value.
                        3. base 'date' option value is the format date.
                        4. base 'currency' option value is the format currency.
                },
                'name': <value>, # required -> Column name
                'label': <value>, -> Column name label. When label is not defined then name is used instead.
                'col_with': <value> -> Collumn with
            }

     'edit_route' => edit route
     'delete_route' => delete route

     'buttons': [
           {
               'type': '<value>', default('info') -> buton type.
               'jsClass': '<value>', default('js-entity-view') -> buton type.
               'icon': '<value>', default('fas fa-eye') -> buton icon.
           },
       ]
    form => form object
#}

{% extends 'base.html.twig' %}
{% import 'Components/Macros/crud-manage-render.html.twig' as render %}

{% block stylesheets %}
    {{ parent() }}

    <link rel="stylesheet" href="{{ asset('build/vendors.css') }}">
    <link rel="stylesheet" href="{{ asset('build/crud_manager.css') }}">
{%  endblock %}

{% block page_content %}
    <div class="row js-crud-manage-row-box">
        <div class="col-md-12">
            <div class="box">
                <div class="box-header with-border">
                    <button class="js-entity-create btn btn-success pull-right">
                        <i class="fa-plus-circle fa" aria-hidden="true"></i> Create new {{ entity_name|trans|lower }}</button>
                </div>
                <div class="box-body table-responsive no-padding">
                    <table id="{{ entity_name|trans|lower|trim(' ') }}s" class="table table-bordered table-striped js-manager-table"
                    data-length="0">
                        <thead>
                        <tr>
                            <th width="60" class="text-center" scope="col">#</th>
                            {% for field in fields %}
                                <th {% if field.col_with is defined %} width="{{ field.col_with }}" {% endif %} scope="col">
                                    {% if field.label is not defined %}{{ field.name|trans|upper }}{% else %}{{ field.label|trans|upper }}{% endif %}
                                </th>
                            {% endfor %}
                            <th width="{% if buttons is defined %}{{ buttons|length * 32 + 100 }}{% else %}100{% endif %}" scope="col">MANAGE</th>
                        </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <!-- row table manager template -->
    <script type="text/template" id="js-manager-row-template">
        <tr data-id="<%= id %>" data-i="<%= index %>">
            <th style="vertical-align: middle;" scope="row" class="text-center js-manager-row-index"><%= index %></th>
            {% for field in fields %}
                <td style="vertical-align: middle;">
                    {{ render.field(field.name, field) }}
                </td>
            {% endfor %}
            <td>
                {% if buttons is defined %}
                    {% for button in buttons %}
                        {#
                            'buttons': [
                               {
                                   'type': '<value>', default('info') -> buton type.
                                   'jsClass': '<value>', default('js-entity-view') -> buton type.
                                   'icon': '<value>', default('fas fa-eye') -> buton icon.
                               },
                           ]
                        #}
                        <button type="button" data-backdrop="static" data-keyboard="false"
                                class="{{ button.jsClass|default('js-entity-view') }} btn btn-{{ button.type|default('info') }} btn-sm pull-left"
                                style="margin-left: 3px">
                            <i class="{{ button.icon|default('fas fa-eye') }}" aria-hidden="true"></i>
                        </button>
                    {% endfor %}
                {% endif %}
                <button type="button" data-backdrop="static" data-keyboard="false" class="js-entity-edit btn btn-primary btn-sm pull-left"
                        style="margin-left: 3px">
                    <i class="fa fa-pencil-alt" aria-hidden="true"></i>
                </button>
                <button type="button" data-backdrop="static" data-keyboard="false" class="js-entity-delete btn btn-danger btn-sm"
                        data-id="<%= id %>" data-title="<%= title %>" style="margin-left: 3px">
                    <i class="fa-trash-alt fa" aria-hidden="true"></i>
                </button>
            </td>
        </tr>
    </script>

    <script src="{{ asset('bundles/fosjsrouting/js/router.min.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>

    <script src="{{ asset('build/vendors.js') }}"></script>
    <script src="{{ asset('build/crud_manager.js') }}"></script>

    <!-- form table manager template -->
    <script type="text/template" id="js-manager-form-template">
        {% set _form_theme = form_theme|default('Components/Form/horizontal-theme-form.html.twig') %}
        {% form_theme form _form_theme %}

        {{ form_start(form, {'attr': {'id': 'entity-form', 'class': 'form-horizontal js-entity-create-from' }}) }}
        <div class="box-body">
            {{ form_widget(form) }}
        </div>
        {{ form_end(form) }}
    </script>

    <script>
        $(document).ready(function(){

            // Create page instance
            let contentWrapper = $('.js-crud-manage-row-box').closest('section');

            // Set up swal confirm options
            let swalConfirmOptions = {
                customClass: {
                    confirmButton: 'btn btn-danger',
                    cancelButton: 'btn btn-default',
                    title: 'swal2-confirm-title',
                    content: 'swal2-confirm-content',
                    actions: 'swal2-confirm-actions',
                },
                buttonsStyling: false,
                type: 'warning',
                width: 500,
                showCancelButton: true,
                showLoaderOnConfirm: true,
                allowOutsideClick: false,
                showCloseButton: true,
                position: 'top',
                confirmButtonText: '{{ 'Delete'|trans }}',
                titleText: '{{ 'Delete'|trans }} {{ entity_name|trans|title }}',
                text: '{{ 'Do you want to delete the'|trans }} {{ entity_name|trans|title|lower }} {0}?',
            };

            // Set up swal confirm options
            let swalFormOptions = {
                customClass: {
                    confirmButton: 'btn btn-danger',
                    cancelButton: 'btn btn-default',
                    title: 'swal2-form-title',
                    content: 'swal2-form-content',
                    actions: 'swal2-form-actions',
                },
                buttonsStyling: false,
                width: 600,
                showCancelButton: true,
                showLoaderOnConfirm: true,
                reverseButtons: true,
                allowEscapeKey: false,
                allowOutsideClick: false,
                showCloseButton: true,
                position: 'top'
            };

            // Set up toast options, for showing the operation final status at the end.
            let toastOptions = {
                toast: true,
                position: 'top',
                showConfirmButton: false,
                timer: 3000,
                customClass: {
                    title: 'swal2-toast-title',
                },
                titleText: '{{ entity_name|trans|title }} {{ 'was {0} successfully.'|trans }}'
            };

            // Create CRUDManage instance @see public/assets/js/CRUDManage.js
            window.crudManager = new CRUDManage('{{ entity_name|snake }}', contentWrapper, swalFormOptions, swalConfirmOptions, toastOptions);
        });
    </script>
{% endblock %}

