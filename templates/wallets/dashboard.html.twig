{% extends 'base.html.twig' %}

{% block page_subtitle %}{{ wallet.name }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}

    {% include 'Components/ui/crud-manage-css.html.twig' %}

    <link rel="stylesheet" href="{{ asset('build/wallet_dashboard.css') }}">
{% endblock %}

{% block page_content %}

    {% include 'wallets/head-dashboard.html.twig' %}

    {% embed 'Components/ui/crud-manage-table.html.twig' with {
        'entity_name': operation_entity_name,
        'fields': wallet_items_fields,
        'js_crud_manage_class': 'js-operation-crud-manage-row-box'
    }%}
    {% endembed %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    {% embed 'Components/ui/crud-manage-scripts.html.twig' with {
        'entity_name': operation_entity_name,
        'fields': wallet_items_fields,
        'create_button_label': 'Add new'|trans ~ ' ' ~ operation_entity_name|trans|lower
    }%}
    {% endembed %}

    <script src="{{ asset('build/wallet_dashboard.js') }}"></script>

    <script>
        $(document).ready(function() {
            let swalFormOperationOptionsText = {
                create: {
                    confirmButtonText: '{{ 'Create'|trans }}',
                    titleText: '{{ 'Add new'|trans }} {{ operation_entity_name|trans|title }}',
                    toastTitleText: '{{ entity_name|trans|title }} {{ 'was added successfully.'|trans }}'
                },
            };

            // Create page instance
            let $operationCrudManagerRowBox = $('.js-operation-crud-manage-row-box');

            let operationContentWrapper = $operationCrudManagerRowBox.closest('section');
            let operationEntityType = $operationCrudManagerRowBox.data('entity-type');

            // Create CRUDManage instance @see public/assets/js/CRUDManage.js
            let operationCrudManager = new CRUDManage({
                entityType: operationEntityType,
                wrapper: operationContentWrapper,
                swalFormOptions: window.swalFormOptions,
                swalConfirmOptions: window.swalConfirmOptions,
                toastOptions: window.toastOptions,
                pagination: true,
            });

            operationCrudManager.setRouteGenerating((entityType, endpoint, id = null) => {
                let route = '';
                let param = {
                    '_id': {{ wallet.id }}
                };

                if (id) {
                    param['id'] = id;
                }

                switch (endpoint) {
                    case 'list':
                        route = Routing.generate('wallet_' + entityType + '_list', param);

                        break;
                    case 'new':
                        route = Routing.generate('wallet_' + entityType + '_new', param);

                        break;
                    case 'get':
                        route = Routing.generate('wallet_' + entityType + '_get', param);

                        break;
                    case 'edit':
                        route = Routing.generate('wallet_' + entityType + '_edit', param);

                        break;
                    case 'delete':
                        route = Routing.generate('wallet_' + entityType + '_delete', param);

                        break;
                    default:
                        throw 'Endpoint wallet_' + endpoint + ' not supported';
                }

                return route
            });

            // const form = new WalletForm(swalFormOptionsText);

            // crudManager.withForm(form);
            operationCrudManager.withCreateButton();

            operationCrudManager.render();
        });
    </script>
{% endblock %}
