{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}

    {% include 'Components/ui/crud-manage-css.html.twig' %}

    <link rel="stylesheet" href="{{ asset('build/broker_stock_form.css') }}">
{%  endblock %}

{% block page_content %}
    {% include 'Components/ui/crud-manage-table.html.twig' %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('build/broker_stock_form.js') }}"></script>

    {% embed 'Components/ui/crud-manage-scripts.html.twig' %}
        {% block create_button_template %}
            <!-- create button table manager template -->
            <script type="text/template" id="js-manager-create-button-template">
                <form method="post" id="add-stock-form" class="form-horizontal js-entity-add-stock-from">
                    <button class="js-add-stock-create btn btn-success pull-right">
                        <i class="fa-plus-circle fa" aria-hidden="true"></i>
                        {{ create_button_label }}
                    </button>
                    <select id="brokerStock" name="stock" required="required" style="width: 30%; margin-right: 10px;"
                            class="js-broker-stock-autocomplete form-control pull-right"
                            data-autocomplete-url="{{ path('stock_list') }}">
                        <option value="" selected="selected">Choose an stock</option>
                    </select>
                </form>
            </script>
        {% endblock %}
    {% endembed %}
    <script>
        $(document).ready(function() {
            let swalFormOptionsText = {
                add: {
                    toastTitleText: '{{ 'Stock was added to the broker successfully.'|trans }}'
                },
                delete: {
                    toastTitleText: '{{ 'Stock was removed from the broker successfully.'|trans }}'
                }
            };

            // Create page instance
            let $crudManagerRowBox = $('.{{ js_crud_manage_class|default('js-crud-manage-row-box') }}');

            let contentWrapper = $crudManagerRowBox.closest('section');
            let entityType = $crudManagerRowBox.data('entity-type');

            // Create CRUDManage instance @see public/assets/js/CRUDManage.js
            let crudManager = new CRUDManage({
                entityType: entityType,
                wrapper: contentWrapper,
                swalFormOptions: window.swalFormOptions,
                swalConfirmOptions: window.swalConfirmOptions,
                toastOptions: window.toastOptions,
                pagination: true,
            });

            const form = new BrokerStockForm(swalFormOptionsText);

            crudManager.withForm(form);
            // add button create
            crudManager.withCreateButton('.js-add-stock-create', form.addStock);
            // add button delete
            crudManager.withDeleteButton();

            // add button extra
            // Delegate selector for edit stock dividend
            $('.js-crud-manage-row-box').closest('section').on(
                'click',
                '.js-entity-edit-dividend-yield',
                function (e) {
                    e.preventDefault();

                    const $row = $(e.currentTarget).closest('tr');
                    const id = $row.data('id');

                    window.location = Routing.generate('stock_dividend_index', {'_id': id})
                }
            );
            crudManager.withExtraButton();

            crudManager.setRouteGenerating((entityType, endpoint, id = null) => {
                let route = '';
                let param = {
                    'id': {{ broker.id }}
                };

                switch (endpoint) {
                    case 'list':
                        route = Routing.generate(entityType + '_list', param);

                        break;
                    case 'delete':
                        route = Routing.generate(entityType + '_delete', param);

                        break;
                    case 'add':
                        route = Routing.generate(entityType + '_add', param);

                        break;
                    default:
                        throw 'Endpoint ' + endpoint + ' not supported';
                }

                return route
            });

            crudManager.render(form.render);
        });
    </script>

{% endblock %}
