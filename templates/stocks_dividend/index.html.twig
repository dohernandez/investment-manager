{% extends 'Components/Layout/crud-manage.html.twig' %}

{% block page_subtitle %}{{ stock|trans|title }}{% endblock %}

{% block page_content %}
    {{ parent() }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('build/stock_dividend_form.js') }}"></script>

    <script>
        $(document).ready(function() {
            // prepare the crud manage table
            let swalFormOptionsText = {
                create: {
                    confirmButtonText: '{{ 'Create'|trans }}',
                    titleText: '{{ 'Create new'|trans }} {{ entity_name|trans|title }}',
                    toastTitleText: '{{ entity_name|trans|title }} {{ 'was created successfully.'|trans }}'
                },
                {#update: {#}
                    {#confirmButtonText: '{{ 'Update'|trans }}',#}
                    {#titleText: '{{ 'Update'|trans }} {{ entity_name|trans|title }}',#}
                    {#toastTitleText: '{{ entity_name|trans|title }} {{ 'was updated successfully.'|trans }}'#}
                {#},#}
                {#delete: {#}
                    {#toastTitleText: '{{ entity_name|trans|title }} {{ 'was deleted successfully.'|trans }}'#}
                {#}#}
            };

            const form = new StockDividendForm(swalFormOptionsText);

            window.crudManager.setRouteGenerating((entityType, endpoint, id = null) => {
                let route = '';
                let param = {
                    'id': {{ stock.id }}
                };

                switch (endpoint) {
                    case 'list':
                        route = Routing.generate(entityType + '_list', param);

                        break;
                    case 'new':
                        route = Routing.generate(entityType + '_new', param);

                        break;
                    // case 'get':
                    //     route = Routing.generate(this.entityType + '_get', param);
                    //
                    //     break;
                    // case 'edit':
                    //     route = Routing.generate(this.entityType + '_edit', param);
                    //
                    //     break;
                    // case 'delete':
                    //     route = Routing.generate(this.entityType + '_delete', param);
                    //
                    //     break;
                    default:
                        throw 'Endpoint ' + endpoint + ' not supported';
                }

                return route
            });

            window.crudManager.withForm(form);
            window.crudManager.withCreateButton();
            // window.crudManager.withEditButton();
            // window.crudManager.withDeleteButton();

            window.crudManager.loadRows();
        });
    </script>
{% endblock %}
